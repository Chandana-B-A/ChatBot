# DIALOGFLOW CX AGENT - ORDER MANAGEMENT CHATBOT
# Comprehensive Guide for Order Cancel & Tracking Functionality

## AGENT OVERVIEW
**Agent Name:** Order Management Bot
**Project ID:** kpe-bot-uat
**Default Language:** English (en)
**Time Zone:** UTC

### Order Data Structure (From API):
```json
{
    "orderId": 34567890,
    "bookName": "Circe",
    "pinCode": 800001,
    "phNum": 8877665544,
    "dob": "12-04-1991",
    "cancelled": false,
    "status": "delivered",
    "refund": "denied",
    "userName": "Noah Wilson"
}
```

## FLOWS ARCHITECTURE

### 1. DEFAULT START FLOW
**Purpose:** Entry point and main menu
**Pages:**
- Start Page (Default)
- Main Menu Page
- Help Page

### 2. ORDER CANCEL FLOW (Your Responsibility)
**Purpose:** Handle order cancellation requests
**Pages:**
- Order Cancel Start Page
- Order Verification Page
- Cancellation Confirmation Page
- Cancellation Success Page
- Cancellation Failed Page

### 3. ORDER TRACKING FLOW (Teammate's Responsibility)
**Purpose:** Handle order tracking and status inquiries
**Pages:**
- Order Tracking Start Page
- Order Lookup Page
- Order Status Display Page
- Delivery Details Page

## ENTITY TYPES

### 1. @order-id
**Type:** Regexp Entity
**Patterns:**
- [0-9]{8,10} (8-10 digit numbers)
**Examples:** 34567890, 12345678, 9876543210

### 2. @phone-number
**Type:** Regexp Entity
**Patterns:**
- [0-9]{10} (10 digit phone numbers)
**Examples:** 8877665544, 9876543210

### 3. @pin-code
**Type:** Regexp Entity
**Patterns:**
- [0-9]{6} (6 digit pin codes)
**Examples:** 800001, 110001, 400001

### 4. @order-status
**Type:** List Entity
**Values:**
- pending
- confirmed
- shipped
- delivered
- cancelled
- returned

### 5. @confirmation-response
**Type:** List Entity
**Values:**
- yes (synonyms: yeah, yep, confirm, proceed, ok)
- no (synonyms: nope, cancel, stop, abort)

## INTENTS

### 1. order.cancel
**Training Phrases:**
- "I want to cancel my order"
- "Cancel order [order-id]"
- "I need to cancel order number [order-id]"
- "Please cancel my recent order"
- "How can I cancel my order"
- "I want to return my book"
- "Cancel my book order"
- "I don't want my order anymore"
- "Stop my order"
- "Remove my order"

### 2. order.cancel.confirm
**Training Phrases:**
- "Yes, cancel it"
- "Confirm cancellation"
- "Yes, I want to cancel"
- "Proceed with cancellation"
- "Yes, please cancel my order"

### 3. order.cancel.deny
**Training Phrases:**
- "No, don't cancel"
- "I changed my mind"
- "Keep my order"
- "Don't cancel it"
- "No, I want to keep it"

### 4. order.provide.id
**Training Phrases:**
- "My order ID is [order-id]"
- "Order number [order-id]"
- "It's [order-id]"
- "[order-id]"
- "The order ID is [order-id]"

### 5. order.provide.phone
**Training Phrases:**
- "My phone number is [phone-number]"
- "Phone [phone-number]"
- "It's [phone-number]"
- "[phone-number]"
- "My number is [phone-number]"

### 6. order.provide.dob
**Training Phrases:**
- "My date of birth is [date]"
- "DOB [date]"
- "Born on [date]"
- "[date]"
- "My birthday is [date]"

## ORDER CANCEL FLOW - DETAILED PAGES

### Page 1: Order Cancel Start Page
**Entry Fulfillment:**
```
Welcome! I can help you cancel your order. To proceed, I'll need to verify some details.

Please provide your Order ID (8-10 digits).
```

**Parameters:**
- order_id (Entity: @order-id, Required: true)

**Intent Routes:**
- order.provide.id ‚Üí Order Verification Page
- Default Welcome Intent ‚Üí Main Menu Page

**Event Handlers:**
- sys.no-match-default (3 attempts)
  - Reprompt: "Please provide a valid Order ID. It should be 8-10 digits long."
- sys.no-input-default (3 attempts)
  - Reprompt: "I'm still waiting for your Order ID. Please share it so I can help you cancel your order."

### Page 2: Order Verification Page
**Entry Fulfillment:**
```
Thank you! I found your order ID: $session.params.order_id

For security purposes, please provide your registered phone number.
```

**Parameters:**
- phone_number (Entity: @phone-number, Required: true)

**Intent Routes:**
- order.provide.phone ‚Üí Cancellation Confirmation Page

**Event Handlers:**
- sys.no-match-default
  - Reprompt: "Please provide your 10-digit registered phone number."
- sys.no-input-default
  - Reprompt: "I need your phone number to verify your identity."

**Conditional Routes:**
- Condition: $page.params.status = "FINAL"
- Webhook: call-order-verification-webhook
- Target: Cancellation Confirmation Page (if verified) / Cancellation Failed Page (if not verified)

### Page 3: Cancellation Confirmation Page
**Entry Fulfillment:**
```
Great! I found your order:

üìñ Book: $session.params.book_name
üÜî Order ID: $session.params.order_id
üë§ Customer: $session.params.user_name
üìç Pin Code: $session.params.pin_code
üìä Current Status: $session.params.current_status

‚ö†Ô∏è Are you sure you want to cancel this order? This action cannot be undone.

Please confirm: Yes or No
```

**Parameters:**
- confirmation (Entity: @confirmation-response, Required: true)

**Intent Routes:**
- order.cancel.confirm ‚Üí Cancellation Success Page
- order.cancel.deny ‚Üí Main Menu Page

**Event Handlers:**
- sys.no-match-default
  - Reprompt: "Please say 'Yes' to confirm cancellation or 'No' to keep your order."

### Page 4: Cancellation Success Page
**Entry Fulfillment:**
```
‚úÖ Order Cancelled Successfully!

Your order #$session.params.order_id has been cancelled.

üìß You will receive a confirmation email shortly.
üí∞ Refund will be processed within 5-7 business days.
üìû For any queries, contact our support team.

Is there anything else I can help you with?
```

**Intent Routes:**
- Default Welcome Intent ‚Üí Main Menu Page
- order.cancel ‚Üí Order Cancel Start Page

### Page 5: Cancellation Failed Page
**Entry Fulfillment:**
```
‚ùå Unable to Cancel Order

Sorry, I couldn't cancel your order for one of these reasons:
- Order details don't match our records
- Order is already shipped/delivered
- Order was previously cancelled

üìû Please contact our customer support for assistance.
üïê Support Hours: 9 AM - 6 PM (Mon-Sat)

Would you like to try again or speak to an agent?
```

**Intent Routes:**
- order.cancel ‚Üí Order Cancel Start Page
- Default Welcome Intent ‚Üí Main Menu Page

## FULFILLMENTS & WEBHOOKS

### 1. Order Verification Webhook
**Webhook URL:** https://your-server.com/api/order
**Method:** POST
**Headers:**
```
Content-Type: application/json
Authorization: Basic YWRtaW46YWRtaW4xMjM=
```

**Request Payload:**
```json
{
  "orderId": "$session.params.order_id",
  "phoneNumber": "$session.params.phone_number"
}
```

**Response Handling:**
```javascript
// Success Response
{
  "success": true,
  "data": {
    "orderId": 34567890,
    "bookName": "Circe",
    "userName": "Noah Wilson",
    "pinCode": 800001,
    "status": "delivered",
    "cancelled": false
  }
}

// Error Response
{
  "error": "Order not found"
}
```

**Session Parameters to Set:**
- book_name: $webhook.response.data.bookName
- user_name: $webhook.response.data.userName
- pin_code: $webhook.response.data.pinCode
- current_status: $webhook.response.data.status
- is_cancelled: $webhook.response.data.cancelled

### 2. Order Cancellation Webhook
**Webhook URL:** https://your-server.com/api/order/cancel
**Method:** POST

**Request Payload:**
```json
{
  "orderId": "$session.params.order_id",
  "phoneNumber": "$session.params.phone_number",
  "reason": "customer_request"
}
```

## CONDITIONAL ROUTES

### Order Verification Page Conditions:
1. **Condition:** $webhook.response.success = true AND $webhook.response.data.cancelled = false
   **Target:** Cancellation Confirmation Page

2. **Condition:** $webhook.response.success = true AND $webhook.response.data.cancelled = true
   **Target:** Cancellation Failed Page
   **Fulfillment:** "This order is already cancelled."

3. **Condition:** $webhook.response.success = true AND $webhook.response.data.status = "delivered"
   **Target:** Cancellation Failed Page
   **Fulfillment:** "Sorry, delivered orders cannot be cancelled. Please contact support for returns."

4. **Condition:** $webhook.response.success = false
   **Target:** Cancellation Failed Page

### Cancellation Confirmation Page Conditions:
1. **Condition:** $session.params.confirmation = "yes"
   **Webhook:** call-order-cancellation-webhook
   **Target:** Cancellation Success Page (if successful) / Cancellation Failed Page (if failed)

## CUSTOM PAYLOADS

### Rich Response for Order Details:
```json
{
  "richContent": [
    [
      {
        "type": "info",
        "title": "Order Details",
        "subtitle": "Order ID: $session.params.order_id",
        "image": {
          "src": {
            "rawUrl": "https://example.com/book-icon.png"
          }
        }
      },
      {
        "type": "description",
        "title": "Book: $session.params.book_name",
        "text": [
          "Customer: $session.params.user_name",
          "Status: $session.params.current_status",
          "Pin Code: $session.params.pin_code"
        ]
      }
    ]
  ]
}
```

### Confirmation Buttons:
```json
{
  "richContent": [
    [
      {
        "type": "chips",
        "options": [
          {
            "text": "Yes, Cancel Order",
            "image": {
              "src": {
                "rawUrl": "https://example.com/cancel-icon.png"
              }
            }
          },
          {
            "text": "No, Keep Order",
            "image": {
              "src": {
                "rawUrl": "https://example.com/keep-icon.png"
              }
            }
          }
        ]
      }
    ]
  ]
}
```

## TESTING SCENARIOS

### Test Case 1: Successful Cancellation
1. User: "I want to cancel my order"
2. Bot: Asks for Order ID
3. User: "34567890"
4. Bot: Asks for phone number
5. User: "8877665544"
6. Bot: Shows order details and asks for confirmation
7. User: "Yes"
8. Bot: Confirms cancellation

### Test Case 2: Order Not Found
1. User: "Cancel order 99999999"
2. Bot: Asks for phone number
3. User: "1234567890"
4. Bot: "Order not found" message

### Test Case 3: Already Cancelled Order
1. User provides cancelled order details
2. Bot: "This order is already cancelled"

## INTEGRATION NOTES

### API Endpoints Required:
1. GET/POST /api/order - Order lookup
2. POST /api/order/cancel - Order cancellation
3. POST /api/order/verify - Phone number verification

### Session Management:
- Session timeout: 30 minutes
- Clear sensitive data after completion
- Log all cancellation attempts for audit

### Error Handling:
- Network timeouts: Retry 3 times
- Invalid responses: Fallback to human agent
- System errors: Graceful degradation

---
**Created for:** Order Management Chatbot
**Version:** 1.0
**Last Updated:** 2025-01-20
**Team:** Order Cancel Flow (Your responsibility) + Order Tracking Flow (Teammate's responsibility)

## ORDER TRACKING FLOW - DETAILED PAGES

### Page 1: Order Tracking Start Page
**Purpose:** Entry point for tracking requests
**Entry Fulfillment:**
```
Welcome! I can help you track your order.

Please provide your Order ID.
```
**Parameters:**
- order_id (Entity: @order-id, Required: true)

**Intent Routes:**
- order.track ‚Üí Order Tracking Start Page (entry)
- order.provide.id ‚Üí Order Lookup Page
- Default Welcome Intent ‚Üí Main Menu Page

**Event Handlers:**
- sys.no-match-default (3 attempts)
  - Reprompt: "Please provide a valid Order ID. It should be 8‚Äì10 digits long."
- sys.no-input-default (3 attempts)
  - Reprompt: "I'm still waiting for your Order ID. Please share it so I can track your order."

### Page 2: Order Tracking Fails (orderId)
**Purpose:** End flow due to wrong order id
**Entry Fulfillment:**
```
Sorry, that order does not exist.
```
**Parameters:**
- None

### Page 3: Order Lookup Page
**Purpose:** Verify the order and collect the phone number for authentication
**Entry Fulfillment:**
```
Thanks! I found your order ID: 12345678
For security purposes, please provide your registered 10-digit phone number.
```
**Parameters:**
- phone_number (Entity: @phone-number, Required: true)

**Intent Routes:**
- order.provide.phone ‚Üí Order Status Display Page (after verification)

**Event Handlers:**
- sys.no-match-default
  - Reprompt: "Please provide your 10-digit registered phone number."
- sys.no-input-default
  - Reprompt: "I need your phone number to verify your identity."

**Conditional Routes:**
- Condition: $page.params.status = "FINAL"
  - Webhook: call-order-lookup-webhook
  - Target:
    - Order Status Display Page (if verified)
    - Order Tracking Fails (phoneNumber) (if not verified)

### Page 4: Order Tracking Fails (phoneNumber)
**Purpose:** End flow due to wrong phone number
**Entry Fulfillment:**
```
Sorry, the mobile number does not match the order id.
```
**Parameters:**
- None

### Page 5: Order Status Display Page
**Purpose:** Show the current status and key order details
**Entry Fulfillment:**
```
Here are your order details:

üìñ Book: $session.params.book_name
üÜî Order ID: $session.params.order_id
üë§ Customer: $session.params.user_name
üìç Pin Code: $session.params.pin_code
üìä Current Status: $session.params.current_status
```
**Parameters:**
- None required (all set via webhook/previous pages)

**Intent Routes:**
- order.track ‚Üí Order Tracking Start Page
- Default Welcome Intent ‚Üí Main Menu Page

**Conditional Routes:**
- None (flow ends after status is displayed)

### Page 6: Tracking Failed Page
**Purpose:** Handle lookup/verification failures
**Entry Fulfillment:**
```
Unable to Track Order. Would you like to try again or speak to an agent?
```
**Intent Routes:**
- order.track ‚Üí Order Tracking Start Page
- Default Welcome Intent ‚Üí Main Menu Page

## INTENTS (Tracking)

### 1. order.track
**Training Phrases:**
- "Track my order"
- "Where is my order?"
- "Order status"
- "Track order [order-id]"
- "I want to track my order"

### 2. order.provide.id (reused)
**Training Phrases:**
- "My order ID is [order-id]"
- "Order number [order-id]"
- "It's [order-id]"
- "[order-id]"
- "The order ID is [order-id]"

### 3. order.provide.phone (reused)
**Training Phrases:**
- "My phone number is [phone-number]"
- "Phone [phone-number]"
- "It's [phone-number]"
- "[phone-number]"
- "My number is [phone-number]"


## ENTITY TYPES (Tracking)
- @order-id ($sys.number.orderId)
- @phone-number ($sys.number.phoneNumber)
- @order-status (List: pending, confirmed, shipped, delivered, cancelled, returned)

## FULFILLMENTS & WEBHOOKS (Tracking)

### 1. Order Lookup Webhook
**Webhook URL:** https://your-server.com/api/order
**Method:** POST
**Headers:**
```
Content-Type: application/json
Authorization: Basic YWRtaW46YWRtaW4xMjM=
```
**Request Payload:**
```json
{
  "orderId": "$session.params.order_id",
  "phoneNumber": "$session.params.phone_number"
}
```
**Response Handling:**
```javascript
// Success Response
{
  "success": true,
  "data": {
    "orderId": 34567890,
    "bookName": "Circe",
    "userName": "Noah Wilson",
    "pinCode": 800001,
    "status": "delivered",
    "cancelled": false
  }
}

// Error Response
{
  "error": "Order not found or phone mismatch"
}
```
**Session Parameters to Set:**
- book_name: $webhook.response.data.bookName
- user_name: $webhook.response.data.userName
- pin_code: $webhook.response.data.pinCode
- current_status: $webhook.response.data.status
- is_cancelled: $webhook.response.data.cancelled


## CUSTOM PAYLOADS (Tracking)

### Rich Response for Order Status:
```json
{
  "richContent": [
    [
      {
        "type": "info",
        "title": "Order Status",
        "subtitle": "Order ID: $session.params.order_id",
        "image": { "src": { "rawUrl": "https://example.com/track-icon.png" } }
      },
      {
        "type": "description",
        "title": "Details",
        "text": [
          "Book: $session.params.book_name",
          "Customer: $session.params.user_name",
          "Status: $session.params.current_status",
          "Pin Code: $session.params.pin_code"
        ]
      }
    ]
  ]
}
```

### Action Chips:
```json
{
  "richContent": [
    [
      {
        "type": "chips",
        "options": [
          { "text": "Track Another Order" }
        ]
      }
    ]
  ]
}
```

## TESTING SCENARIOS (Tracking)

### Test Case 1: Successful Tracking
1. User: "Track my order"
2. Bot: Asks for Order ID
3. User: "34567890"
4. Bot: Asks for phone number
5. User: "8877665544"
6. Bot: Shows order status and ends tracking

### Test Case 2: Order Not Found
1. User: "Track order 99999999"
2. Bot: Asks for phone number
3. User: "1234567890"
4. Bot: "Order not found" ‚Üí Tracking Failed Page

### Test Case 3: Phone Mismatch
1. User provides valid order ID but wrong phone
2. Bot: "The phone number doesn‚Äôt match the order" ‚Üí Retry or agent handoff

### Test Case 4: Delivered Order
1. User provides delivered order details
2. Bot: "Your order is already delivered" ‚Üí Main Menu Page